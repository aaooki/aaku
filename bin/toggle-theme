#!/bin/sh

# usage: source toggle-theme (toggle $theme|keep)
#

THEME_CONFIG_PATH=~/.config/system-theme

read_system_theme() {
  local current=$(cat $THEME_CONFIG_PATH 2>/dev/null)
  echo $current
}

toggle() {
  if [[ $1 == "dark" ]]; then
    echo "light"
  elif [[ $1 == "light" ]]; then
    echo "dark"
  else
    echo "dark"
  fi
}

keep() {
  echo $1
}

toggle_alacritty() {
  local config_path="$AAKU/alacritty/colors.toml"
  local alacritty_file="$AAKU/alacritty/alacritty.toml"

  perl -i -pe "s/\w+\.toml/${theme}.toml/g" $config_path

  touch $alacritty_file
}

toggle_nvims_linux() {
  ls $XDG_RUNTIME_DIR/nvim.*.0 \
    | xargs -I {} nvim --server {} --remote-send ":SetColorschemeMode $theme<CR>"
}

toggle_nvims_macos() {
  nvim-ctrl.sh ":SetColorschemeMode $theme<CR>"
}

toggle_gtk() {
  gsettings set org.gnome.desktop.interface gtk-theme "Colloid-$theme"
}

toggle_macos() {
  if [[ $theme == "dark" ]]; then
    local set_dark="true"
  else
    local set_dark="false"
  fi

  osascript -l JavaScript -e "Application('System Events').appearancePreferences.darkMode = $set_dark"
}

case "$1" in
  toggle)
    theme=$(toggle ${2:-$(read_system_theme)})
    ;;
  keep)
    theme=$(keep $(read_system_theme))
    ;;
  *)
    echo "Usage: $0 {toggle $theme|keep}"
    exit 2
esac

export TERM_COLOR_MODE="$theme"

unameOut="$(uname -s)"
case "${unameOut}" in
  Linux*)
    toggle_alacritty
    toggle_nvims_linux
    toggle_gtk
    ;;
  Darwin*)
    toggle_alacritty
    toggle_nvims_macos
    toggle_macos
    ;;
  CYGWIN*)
    echo "Windows not supported, yet!"
    ;;
  MINGW*)
    echo "Windows not supported, yet!"
    ;;
  *)
    echo "Unknow OS:${unameOut}"
    ;;
esac

# update theme config
echo $theme > $THEME_CONFIG_PATH

exit 0
