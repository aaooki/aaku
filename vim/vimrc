"Plugins
set nocompatible              "choose no compatibility with legacy vi
filetype off
"set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
"let Vundle manage Vundle, required
    Plugin 'gmarik/Vundle.vim'

"keep Plugin commands between vundle#begin/end.
    Plugin 'rking/ag.vim'
    Plugin 'scrooloose/nerdtree'
    Plugin 'ctrlpvim/ctrlp.vim'
    Plugin 'myusuf3/numbers.vim'
    Plugin 'tpope/vim-fugitive'
    Plugin 'airblade/vim-gitgutter'
    Plugin 'tomtom/tcomment_vim'
    Plugin 'tpope/vim-surround'
    Plugin 'christoomey/vim-system-copy'
    Plugin 'w0ng/vim-hybrid'
    Plugin 'NLKNguyen/papercolor-theme'
    Plugin 'vim-airline/vim-airline'
    Plugin 'vim-airline/vim-airline-themes'
    Plugin 'tpope/vim-rails'
    Plugin 'fatih/vim-go'
    Plugin 'mattn/emmet-vim'
   call vundle#end()

" General Settings
set encoding=utf-8
set ttimeout
set ttimeoutlen=50
set number
set nowrap                      "disable soft wrap for lines
set showcmd                     "display incomplete commands
set noshowmode                  "disable the label for the current mode
set hidden                      "hide buffers instead of closing them
set history=77
set undolevels=77
set nobackup
set noswapfile

" Search
set incsearch
set ignorecase                  "searches are case insensitive...
set smartcase                   " ..unless they contain at least one capital letter

" Intendation
filetype plugin indent on
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab                   "use spaces, not tabs
set autoindent                  "always set autoindenting on
set backspace=indent,eol,start  "backspace through everything in insert mode
autocmd FileType c setlocal ts=4 sts=4 sw=4 expandtab
autocmd FileType make setlocal ts=8 sts=8 sw=8 noexpandtab

" EyeCandy
syntax on
set t_Co=256                    "enable 256 colors
set term=screen-256color
set cursorline                  "higlight current line
set colorcolumn=81
set background=dark
colorscheme hybrid

" Plugin Settings
"Airline
set laststatus=2                                    "always display the status bar
let g:airline_powerline_fonts = 1
let g:airline_theme = 'term'
let g:airline_left_sep=''
let g:airline_right_sep=''
let g:airline#extensions#tabline#enabled = 1        "enable tabline extension to show buffers on top
let g:airline#extensions#tabline#fnamemod = ':t'    "show just the filename

"NerdTree settings
let NERDTreeShowHidden=1            "show hidden files in NerdTree
let NERDTreeChDirMode=2             "set nerdtree dir to current working dir
autocmd VimEnter * wincmd w         "place the cursor on the opened file directly

"CtrlP & Ag
"let ag.vim start searching from the project root instead of the cwd
let g:ag_working_path_mode="r"

if executable('ag')
  " Use Ag over Grep
  set grepprg=ag\ --nogroup\ --nocolor
  let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g ""'
  let g:ctrlp_use_caching = 0 " no caching
endif

" Key Maps
"leader key
let mapleader = ","

"map C-n to ,c
inoremap <leader>c <C-n>

"easy window navigation and splits
map <silent> <C-h> :call WinMove('h')<cr>
map <silent> <C-j> :call WinMove('j')<cr>
map <silent> <C-k> :call WinMove('k')<cr>
map <silent> <C-l> :call WinMove('l')<cr>

"override file systems by typing :w!!
cmap w!! %!sudo tee > /dev/null %

"map Silver Searcher
map \ :Ag!<space>

"bind K to grep word under cursor
nnoremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>

"toggle NERDTree using ctrl+n
map <leader>k :NERDTreeToggle<CR>

"open a new empty buffer
nmap <leader>T :enew<cr>
"move to the next buffer
nmap <leader>l :bnext<CR>
"move to the previous buffer
nmap <leader>h :bprevious<CR>
"close the current buffer and move to the previous one
nmap <leader>bq :bp <BAR> bd #<CR>

" Functions
"move to the window in the direction shown, or create a new window
function! WinMove(key)
  let t:curwin = winnr()
  exec "wincmd ".a:key
  if (t:curwin == winnr())
    if (match(a:key,'[jk]'))
      wincmd v
    else
      wincmd s
    endif
    exec "wincmd ".a:key
  endif
endfunction
