"Plugins
set nocompatible              "no compatibility with legacy vi
filetype off
"set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
    Plugin 'gmarik/Vundle.vim'

    Plugin 'rking/ag.vim'
    Plugin 'ctrlpvim/ctrlp.vim'
    Plugin 'myusuf3/numbers.vim'
    Plugin 'tpope/vim-fugitive'
    Plugin 'airblade/vim-gitgutter'
    Plugin 'tomtom/tcomment_vim'
    Plugin 'tpope/vim-surround'
    Plugin 'christoomey/vim-system-copy'
    Plugin 'junegunn/goyo.vim'
    Plugin 'w0ng/vim-hybrid'
    Plugin 'NLKNguyen/papercolor-theme'
    Plugin 'tpope/vim-rails'
    Plugin 'fatih/vim-go'
    Plugin 'kchmck/vim-coffee-script'
    Plugin 'leafgarland/typescript-vim'
    Plugin 'mattn/emmet-vim'
   call vundle#end()

syntax on
filetype plugin indent on

set showcmd                     "display incomplete commands
set laststatus=2                "always display the status bar
set hidden                      "hide buffers instead of closing them
set nowrap                      "disable soft wrap for lines
set scrolloff=2
set ruler
set number
set cursorline                  "higlight current line
set colorcolumn=81
set path+=**

set mouse=n
set ttymouse=xterm2

set t_Co=256                    "enable 256 colors
set term=screen-256color
set background=dark
colorscheme PaperColor

set encoding=utf-8
set ttimeout
set ttimeoutlen=50
set history=77
set undolevels=77
set nobackup
set noswapfile

set incsearch
set ignorecase                  "searches are case insensitive...
set smartcase                   " ..unless they contain at least one capital letter

set autoindent                  "always set autoindenting on
set backspace=indent,eol,start  "backspace through everything in insert mode
set tabstop=2
set expandtab                   "use spaces, not tabs
set shiftwidth=2
set softtabstop=2
autocmd FileType c setlocal ts=4 sts=4 sw=4 noexpandtab
autocmd FileType make setlocal ts=8 sts=8 sw=8 noexpandtab

"Ag
let g:ag_working_path_mode="r"  "search from the project root instead of cwd

"CtrlP
if executable('ag')
  " Use Ag over Grep
  set grepprg=ag\ --nogroup\ --nocolor
  let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g ""'
  let g:ctrlp_use_caching = 0 " no caching
endif

"The Leader
let mapleader = ","

"map Silver Searcher
map \ :Ag!<space>

"bind K to search the word under cursor
nnoremap K :Ag! "\b<C-R><C-W>\b"<CR>:cw<CR>

"Ctags
map <leader>rt :!ctags --tag-relative --extra=+f -Rf .git/tags --exclude=.git,pkg --languages=-javascript,sql<CR><CR>
set tags+=.git/tags
map <leader>. :CtrlPTag<cr>

"search files
nmap <leader>p :CtrlP<cr>

"search open buffers
nmap <leader>m :CtrlPBuffer<cr>
"new empty buffer
nmap <leader>T :enew<cr>
"next buffer
nmap <leader>l :bnext<CR>
"previous buffer
nmap <leader>h :bprevious<CR>
"close current buffer and move to the previous one
nmap <leader>bq :bp <BAR> bd #<CR>

"override file systems by typing :w!!
cmap w!! %!sudo tee > /dev/null %

"remove current line highlight in unfocused window
au VimEnter,WinEnter,BufWinEnter,FocusGained,CmdwinEnter *  set cul
au WinLeave,FocusLost,CmdwinLeave * set nocul

"window navigation and splits
set splitbelow
set splitright

map <silent> <C-h> :call WinMove('h')<cr>
map <silent> <C-j> :call WinMove('j')<cr>
map <silent> <C-k> :call WinMove('k')<cr>
map <silent> <C-l> :call WinMove('l')<cr>

"move to the window in the direction shown, or create a new window
function! WinMove(key)
  let t:curwin = winnr()
  exec "wincmd ".a:key
  if (t:curwin == winnr())
    if (match(a:key,'[jk]'))
      wincmd v
    else
      wincmd s
    endif
    exec "wincmd ".a:key
  endif
endfunction
