#!/usr/bin/env zsh

unalias rm
BASEDIR="$(cd "$(dirname "${ZSH_SOURCE[0]}")" && pwd)"

link_config() {
  src=$1
  dst=$2

  rm -rf $HOME/$dst
  ln -sfn ${BASEDIR}/$src $HOME/$dst
}

link_dev() {
  echo "Installing Dev config..."

  link_config vim/vim    .vim
  link_config vim/vimrc  .vimrc
  link_config vim/gvimrc .gvimrc

  link_config nvim .config/nvim

  link_config zsh/zsh      .zsh
  link_config zsh/zprofile .zprofile
  link_config zsh/zshenv   .zshenv
  link_config zsh/zshrc    .zshrc

  link_config git/gitconfig         .gitconfig
  link_config git/gitconfig.secrets .gitconfig.secrets
  link_config git/gitignore         .gitignore
  link_config git/gitattributes     .gitattributes

  link_config tmux/tmux.conf .tmux.conf
  link_config ruby/irbrc     .irbrc
  link_config scheme/csirc   .csirc
  link_config rg/rgignore    .rgignore
  link_config ctags/ctags    .ctags

  link_config alacritty .config/alacritty

  echo "fetching vim plugins..."
  vim -c PlugInstall -c qall

  echo "fetching nvim plugins..."
  nvim -c PackerSync -c qall

  source $HOME/.zshrc
  echo "zshrc sourced."
}

link_linux_shared() {
  echo "Installing Linux shared config..."

  link_config linux_shared/dunst   .config/dunst
  link_config linux_shared/zathura .config/zathura

  echo "I'd just like to interject for a moment. What you’re referring to as
  Linux, is in fact, GNU/Linux, or as I’ve recently taken to calling it,
  GNU plus Linux. Linux is not an operating system unto itself, but rather
  another free component of a fully functioning GNU system made useful by
  the GNU corelibs, shell utilities and vital system components comprising
  a full OS as defined by POSIX. Many computer users run a modified
  version of the GNU system every day, without realizing it. Through a
  peculiar turn of events, the version of GNU which is widely used today
  is often called “Linux”, and many of its users are not aware that it is
  basically the GNU system, developed by the GNU Project. There really is
  a Linux, and these people are using it, but it is just a part of the
  system they use. Linux is the kernel: the program in the system that
  allocates the machine’s resources to the other programs that you run.
  The kernel is an essential part of an operating system, but useless by
  itself; it can only function in the context of a complete operating
  system. Linux is normally used in combination with the GNU operating
  system: the whole system is basically GNU with Linux added, or
  GNU/Linux. All the so-called “Linux” distributions are really
  distributions of GNU/Linux.
  "
}

link_linux_wayland() {
  echo "Installing Linux Wayland config..."

  link_config wayland/sway   .config/sway
  link_config wayland/waybar .config/waybar
  link_config wayland/wofi   .config/wofi
  link_config wayland/mako   .config/mako

  link_linux_shared
}

link_linux_x11() {
  echo "Installing Linux X11 config..."

  link_config bin/fehbg      .fehbg
  link_config X11/xinitrc    .xinitrc
  link_config X11/Xresources .Xresources
  link_config X11/rofi       .config/rofi
  link_config X11/picom      .config/picom
  link_config X11/fontconfig .config/fontconfig

  link_linux_shared
}

link_macos() {
  echo "Installing MacOS config..."

  link_config macos/yabai .config/yabai
  link_config macos/skhd  .config/skhd
}

link_cli_tools() {
  echo "Installing CLI tools..."

  link_config nnn      .config/nnn
  link_config newsboat .newsboat
  link_config cmus     .config/cmus
}

link_fonts() {
  echo "Installing Fonts..."

  [ -d $HOME/workspace/fonts/ ] || (git clone https://github.com/powerline/fonts.git $HOME/workspace/fonts/ && pushd $HOME/workspace/fonts && ./install.sh && popd)

  [ -d $HOME/workspace/fonts/icons-in-terminal/ ] || (git clone https://github.com/sebastiencs/icons-in-terminal.git $HOME/workspace/fonts/icons-in-terminal && pushd $HOME/workspace/fonts/icons-in-terminal && ./install.sh && popd)

  [ -d $HOME/workspace/icons/ ] || (git clone https://github.com/dhanishgajjar/terminal-icons $HOME/workspace/icons/terminal-icons)
}

echo "Creating workspace folder..."
mkdir -p $HOME/workspace

echo "Updating Git submodules..."
git submodule update --init --recursive --remote

if [ $# -eq 0 ]; then
  echo "Installing all..."
  link_dev
  link_linux_wayland
  link_linux_x11
  link_macos
  link_cli_tools
  link_fonts
elif [[ condition ]]; then
  while test $# -gt 0
  do
    case "$1" in
      dev)
        link_dev
        ;;
      linux)
        link_linux_wayland
        ;;
      linux-x)
        link_linux_x11
        ;;
      macos)
        link_macos
        ;;
      cli)
        link_cli_tools
        ;;
      fonts)
        link_fonts
        ;;
      *)
        echo "Usage: $0 [*|dev|linux|linux-x|macos|cli|fonts]"
        ;;
    esac
    shift
  done
fi
